---
import Layout from "../../layout/Layout.astro";
import NavOptions from "../../components/NavOptions.astro";
import { Image } from "astro:assets";

const pics = await Astro.glob("../../pics/*.{jpg,jpeg,png}");
---

<Layout>
  <NavOptions />
  <h1>pics.</h1>
  <div class="masonry-grid">
    {
      pics.map((pic) => (
        <div class="masonry-item">
          <Image
            src={pic.default}
            widths={[400, 800, 1200, 1600]}
            format="webp"
            alt={pic.default.src
              .split("/")
              .pop()
              .split(".")[0]
              .replace(/-/g, " ")}
            loading="lazy"
            class="grid-image"
            quality={50}
            decoding={"async"}
          />
        </div>
      ))
    }
  </div>

  <div id="imageModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="expandedImg" />
  </div>

  <style>
    .masonry-grid {
      columns: 1;
      column-gap: 1rem;
      padding: 1rem;
      max-width: 1600px;
      margin: 0 auto;
    }

    .masonry-item {
      break-inside: avoid;
      margin-bottom: 1rem;
      max-width: 100%;
    }

    .grid-image {
      width: 100%;
      height: auto;
      display: block;
      border-radius: 8px;
      max-width: 400px;
      object-fit: cover;
      margin: 0 auto;
      cursor: pointer;
      transition: transform 0.2s;
    }

    .grid-image:hover {
      transform: scale(1.02);
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 999;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      padding: 2rem;
      box-sizing: border-box;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .modal.show {
      display: flex;
      opacity: 1;
    }

    .modal-content {
      margin: auto;
      display: block;
      max-width: 90%;
      max-height: 90vh;
      object-fit: contain;
    }

    .close {
      position: absolute;
      right: 2rem;
      top: 1rem;
      color: #fff;
      font-size: 2rem;
      font-weight: bold;
      cursor: pointer;
      z-index: 1000;
    }

    @media (min-width: 640px) {
      .masonry-grid {
        columns: 2;
      }
      .grid-image {
        max-width: 300px;
      }
    }

    @media (min-width: 768px) {
      .masonry-grid {
        columns: 3;
      }
      .grid-image {
        max-width: 250px;
      }
    }

    @media (min-width: 1024px) {
      .masonry-grid {
        columns: 4;
      }
      .grid-image {
        max-width: 280px;
      }
    }

    @media (min-width: 1280px) {
      .masonry-grid {
        columns: 3;
      }
      .grid-image {
        max-width: 300px;
      }
    }
  </style>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const modal = document.getElementById("imageModal");
      if (!modal) return;

      const modalImg = document.getElementById(
        "expandedImg"
      ) as HTMLImageElement & {
        src: string;
      };
      if (!modalImg) return;

      const closeBtn = document.querySelector(".close");
      if (!closeBtn) return;

      const gridImages = document.querySelectorAll(".grid-image") as NodeListOf<
        Element & {
          src: string;
        }
      >;

      gridImages.forEach((img) => {
        img.addEventListener("click", () => {
          modal.classList.add("show");
          modalImg.src = img.src;
          document.body.style.overflow = "hidden";
        });
      });

      closeBtn.addEventListener("click", (e) => {
        e.stopPropagation();
        closeModal();
      });

      modal.addEventListener("click", (e) => {
        if (e.target === modal) {
          closeModal();
        }
      });

      modalImg.addEventListener("click", (e) => {
        e.stopPropagation();
      });

      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
          closeModal();
        }
      });

      const closeModal = () => {
        modalImg.src = "";
        modal.classList.remove("show");
        document.body.style.overflow = "";
      };
    });
  </script>
</Layout>
